import 'package:homepage/features/home/models/redirect_internal_setting.dart';

class WhatsOn {
	int? id;
	String? slug;
	String? type;
	String? title;
	String? distance;
	String? diffDay;
	String? description;
	String? imageUrl;
	int? status;
	String? statusText;
	String? howToUse;
	String? termsAndCondition;
	String? url;
	String? startDate;
	String? endDate;
	String? standingAvailable;
	String? standingAvailableText;
	String? createdAt;
	String? whatsapp;
	String? eventDate;
	String? openGate;
	String? reservationType;
	String? reservationTypeText;
	String? availabilityType;
	String? availabilityTypeText;
	String? isPromoted;
	String? isPromotedText;
	String? isPriceUploaded;
	int? reservationPaymentType;
	String? reservationPaymentTypeText;
	int? isSoldOut;
	int? isSoldOutStanding;
	String? credit;
	String? sponsor;
	String? generalAdmissionUrl;
	String? inclusionList;
	bool? useAffiliatorCode;
	String? maxStandingCapacity;
	String? talentDescriptionUrl;
	bool? isUsingTicket;
	String? houseRulesUrl;
	String? location;
	List<String>? tags;
	String? potraitImage;
	RedirectInternalSetting? redirectInternalSetting;

	WhatsOn({this.id, this.slug, this.type, this.title, this.distance, this.diffDay, this.description, this.imageUrl, this.status, this.statusText, this.howToUse, this.termsAndCondition, this.url, this.startDate, this.endDate, this.standingAvailable, this.standingAvailableText, this.createdAt, this.whatsapp, this.eventDate, this.openGate, this.reservationType, this.reservationTypeText, this.availabilityType, this.availabilityTypeText, this.isPromoted, this.isPromotedText, this.isPriceUploaded, this.reservationPaymentType, this.reservationPaymentTypeText, this.isSoldOut, this.isSoldOutStanding, this.credit, this.sponsor, this.generalAdmissionUrl, this.inclusionList, this.useAffiliatorCode, this.maxStandingCapacity, this.talentDescriptionUrl, this.isUsingTicket, this.houseRulesUrl, this.location, this.tags, this.potraitImage, this.redirectInternalSetting});

	WhatsOn.fromJson(Map<String, dynamic> json) {
		id = json['id'];
		slug = json['slug'];
		type = json['type'];
		title = json['title'];
		distance = json['distance'];
		diffDay = json['diff_day'];
		description = json['description'];
		imageUrl = json['image_url'];
		status = json['status'];
		statusText = json['status_text'];
		howToUse = json['how_to_use'];
		termsAndCondition = json['terms_and_condition'];
		url = json['url'];
		startDate = json['start_date'];
		endDate = json['end_date'];
		standingAvailable = json['standing_available'];
		standingAvailableText = json['standing_available_text'];
		createdAt = json['created_at'];
		whatsapp = json['whatsapp'];
		eventDate = json['event_date'];
		openGate = json['open_gate'];
		reservationType = json['reservation_type'];
		reservationTypeText = json['reservation_type_text'];
		availabilityType = json['availability_type'];
		availabilityTypeText = json['availability_type_text'];
		isPromoted = json['is_promoted'];
		isPromotedText = json['is_promoted_text'];
		isPriceUploaded = json['is_price_uploaded'];
		reservationPaymentType = json['reservation_payment_type'];
		reservationPaymentTypeText = json['reservation_payment_type_text'];
		isSoldOut = json['is_sold_out'];
		isSoldOutStanding = json['is_sold_out_standing'];
		credit = json['credit'];
		sponsor = json['sponsor'];
		generalAdmissionUrl = json['general_admission_url'];
		inclusionList = json['inclusion_list'];
		useAffiliatorCode = json['use_affiliator_code'];
		maxStandingCapacity = json['max_standing_capacity'];
		talentDescriptionUrl = json['talent_description_url'];
		isUsingTicket = json['is_using_ticket'];
		houseRulesUrl = json['house_rules_url'];
		location = json['location'];
		tags = json['tags'].cast<String>();
		potraitImage = json['potrait_image'];
		redirectInternalSetting = json['redirect_internal_setting'] != null ? new RedirectInternalSetting.fromJson(json['redirect_internal_setting']) : null;
	}

	Map<String, dynamic> toJson() {
		final Map<String, dynamic> data = new Map<String, dynamic>();
		data['id'] = id;
		data['slug'] = slug;
		data['type'] = type;
		data['title'] = title;
		data['distance'] = distance;
		data['diff_day'] = diffDay;
		data['description'] = description;
		data['image_url'] = imageUrl;
		data['status'] = status;
		data['status_text'] = statusText;
		data['how_to_use'] = howToUse;
		data['terms_and_condition'] = termsAndCondition;
		data['url'] = url;
		data['start_date'] = startDate;
		data['end_date'] = endDate;
		data['standing_available'] = standingAvailable;
		data['standing_available_text'] = standingAvailableText;
		data['created_at'] = createdAt;
		data['whatsapp'] = whatsapp;
		data['event_date'] = eventDate;
		data['open_gate'] = openGate;
		data['reservation_type'] = reservationType;
		data['reservation_type_text'] = reservationTypeText;
		data['availability_type'] = availabilityType;
		data['availability_type_text'] = availabilityTypeText;
		data['is_promoted'] = isPromoted;
		data['is_promoted_text'] = isPromotedText;
		data['is_price_uploaded'] = isPriceUploaded;
		data['reservation_payment_type'] = reservationPaymentType;
		data['reservation_payment_type_text'] = reservationPaymentTypeText;
		data['is_sold_out'] = isSoldOut;
		data['is_sold_out_standing'] = isSoldOutStanding;
		data['credit'] = credit;
		data['sponsor'] = sponsor;
		data['general_admission_url'] = generalAdmissionUrl;
		data['inclusion_list'] = inclusionList;
		data['use_affiliator_code'] = useAffiliatorCode;
		data['max_standing_capacity'] = maxStandingCapacity;
		data['talent_description_url'] = talentDescriptionUrl;
		data['is_using_ticket'] = isUsingTicket;
		data['house_rules_url'] = houseRulesUrl;
		data['location'] = location;
		data['tags'] = tags;
		data['potrait_image'] = potraitImage;
		if (redirectInternalSetting != null) {
      data['redirect_internal_setting'] = redirectInternalSetting!.toJson();
    }
		return data;
	}
}